- name: Implementing multiclass classification from scratch 
  id: 0151d90e-6eb5-41b4-ab0a-c9ce6634064b
  description: |+
    1. Load in the iris dataset from sklearn
    2. Take a look at the labels of the data and make sure you understand how this maps to a multiclass classification problem
    3. Create a class called MulticlassClassifier
    4. Create a softmax function and test it
    5. Implement the forward pass, passing the final layer through the softmax
    6. Define a function outside of your class to compute the cross entropy loss from the predicted and target label
    7. Implement a method to calculate the gradients of your loss with respect to the model params
    8. Define a training loop
    9. Visualise the loss curve and debug as appropriate

- name: Multiclass vs multilabel
  id: 08e15763-7728-4bb3-82cb-75d0faa9bf8e
  description: |+
    1. What is the probability for 10 classes to be correctly predicted in __multiclass__ setting?
    2. What about __multilabel__ version?
    3. What loss function should we use when working with multilabel task?
    4. How does `multiclass` differ from `multilabel`? Show an example for single sample

- name: Code cross entropy
  id: dc27d837-e805-43c0-9c5a-742af66a84eb
  description: |+
    1. Code `cross_entropy` only by choosing elements which targets point to.
    2. How do we calculate the gradient of the output with respect to the input?

- name: Don't overfit II
  id: 70a2c91a-e817-42f5-bd75-d319cf29f163
  description: |+
    1. Check out [Don't Overfit II](https://www.kaggle.com/c/dont-overfit-ii) Kaggle challenge and available solution to get a better idea when to use simple models
