- id: cd66df8a-0645-4fac-a0df-e92b6c93da5b
  name: Create a hello world workflow
  description: |
    - create a new repo called CI-CD with just a readme
    - head over to the actions tab and browse some of the available workflows
    - choose to create a new workflow yourself, you should be shown a simple workflow template
    - step through this line by line, explaining what it does
      - refer to the documentation if you need and answer the following questions
      - are the square brackes needed within the `on` necessary?
      - github runs workflows by looking for them in a specific location. Where is that?
      - what are the names of the pre-built actions are used in this template? What do they do?
    - commit the workflow 
      - yes, from within github
        - not at all great practice to be editing code within github rather than your IDE, but fine for now
    - push to the main branch trigger after editing a file
    - check the actions tab in the github repo

- id: af259fd8-deb5-4661-b4da-66110c842391
  name: Unit testing workflow
  description: |
    - using Python's unittest, create some basic tests for a project you've worked on in the past
      - dont try anything crazy, the point of this practical is to get experience with github actions, not unittest
    - push this to a github repo
    - go to the actions tab in the repo and create a new workflow
      - edit the default script
        - give it an appropriate name like "Tests"
        - change the job name
        - consider which steps to change
        - make it run on pushes and pull requests to the main branch

- id: 1f1c1921-c238-4a15-a278-2de64783e925
  name: AWS Credentials as GitHub Secrets for S3
  description: |
    - create an S3 bucket and add a random file
    - figure out how to print the contents of your S3 bucket from the command line
    - create a new workflow in your CI-CD repo, and run this AWS command in a step of a job
    - run the workflow by committing the workflow
    - does it work? Probably not... 
    - you've probably got an error telling you that the command `aws` is not recognised
    - find the action that you need to run the job `with` to install the aws cli
    - run the workflow by committing the workflow
    - you've probably got a permissions error
    - create an IAM role with permissions to read S3
    - now create a new user and assign this permission to them 
      - (either directly or by adding them to a group "cloudformation-demo-workflows" and assigning the relevant permissions)
      - download the AWS credentials for this user
    - go back to your github repo and go to the settings tab
    - within settings, find the "secrets" tab
    - create two new secrets with the relevant values called
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
    - add these as environment variables within the workflow step

- id: db522398-a3d4-4846-9507-9fa6a06550b5
  name: Building a continuously deployed Cloudformation stack
  description: |
    - create a cloudformation stack containing just an s3 bucket in a repo
    - from the command line, deploy the stack
    - make a small change to the stack and now create an update to it from the command line
    - for this repo create a github workflow 
      - to start with, make it simply echo hello world to the runner
      - it should be triggered on pushes to main or on pull requests made to main
    - now add the command line actions to update the stack from within the workflow