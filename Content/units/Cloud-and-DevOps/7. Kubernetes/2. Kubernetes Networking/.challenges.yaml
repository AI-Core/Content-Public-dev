- id: 343e1f1c-3d48-4c97-82ef-87e4a409b6c0
  name: nginx ingress
  description: |
    - Look for information about how nginx handles traffic.
    - Since you will likely work in minikube, you will need to install the nginx ingress controller. 
    - Follow the instructions in this tutorial to set your minikube https://medium.com/@Oskarr3/setting-up-ingress-on-minikube-6ae825e98f82

- id: 378d8b53-209d-4a15-b4fc-0187a01361bf
  name: Topology Aware Hints
  description: |
    - Check the Topology Aware Hints in Kubernetes https://kubernetes.io/docs/concepts/services-networking/topology-aware-hints/
    - How can it improve our application's responsiveness and performance?

- id: 0b653171-b1f9-4c1c-8c14-b930f8f7a858
  name: Imperative Networking
  description: |
    - Create a simple Deployment resource with three pods that contains the nginx container.
    - Create a simple ClusterIP Service that connect to the pods in the deployment using the kubectl command line tool.

- id: 7b32d814-aab2-4912-a5d8-e60cd2051cc4
  name: FastAPI and Kubernetes
  description: |
    - Create a simple FastAPI application that returns a simple JSON response.
    - Containerize the application and deploy it to Docker
    - Create a .yaml file that describes the deployment, service, and an ubuntu pod.
      - The deployment should have a single container that runs the FastAPI application.
      - The service can be a ClusterIP service that conenct to the pods in the deployment.
      - The pod should be a ubuntu pod that with arguments that make it sleep, so you can execute bash in it. 
    - Test your application by running a curl command in the pod.