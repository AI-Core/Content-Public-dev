questions:
  - question: What is the difference between function and method? Name three examples of each.
  - question: What is the difference between a docstring and a comment? How do you define each one?
  - question: What is the scope of a variable? What two scopes can you name?
  - question: Name at least two ways to check the documentation of a function.
  - question: "What is the output of the following code? \n\n `x = 0` \n\n `def f(x):` \n\n\t\t x = x + 1 \n\t\t return x \n\n `f(x)`"
  - question: "What is the output of the following code? \n\n `x = 0` \n\n `def f():` \n\n\t\t x = x + 1 \n\t\t return x \n\n `f(x)`"
  - question: "What is the output of the following code? \n\n `x = 0` \n\n `def f():` \n\n\t\t global x \n\t\t x = x + 1 \n\t\t return x \n\n `f()`"
  - question: "What is the output of the following code? \n\n `def f(x):` \n\n\t\t x = x + 1 \n\n\t\t print(x) \n\n `y = f()` \n\n `print(y)`"
  - question: "True or False: If you want to use a variable number of arguments in a function, you must use the *args or **kwargs syntax."
  - question: How does *args and **kwargs behave in a function? Or in other words, what's the type of the variables?
  - question: The Fibonacci sequence is one of the main examples of recursion. What is recursion? With your own words, explain its difference from iteration.
  - question: "The Fibonacci sequence goes like this: \n\n `(1, 1, 2, 3, 5, 8, 13, 21, 34, ...)` \n\n ## How can you implement it using recursion?"
  - question: How can I define a function which can take in any number of arguments?
  - question: How can I define a function which can take in any number of keyword arguments?
  - question: What keyword can I put inside an empty function so that Python doesn't complain about an IndentationError?
